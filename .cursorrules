this project will contain project .env files for all bor- related projects/containers and scripts to deploy them to differenc environmenst, 
initially the choice will be 'prod_ionos'. 

# pwd to the path 
export PROD_IONOS_ROOT_PATH="/var/www/vhosts/robmenning.com/bor"

export PROD_IONOS_BOR_DB_CONTAINER_NAME="bor-db"
export PROD_IONOS_BOR_API_CONTAINER_NAME="bor-api"
export PROD_IONOS_BOR_APP_CONTAINER_NAME="bor-app"
export PROD_IONOS_BOR_AIRFLOW_CONTAINER_NAME="bor-airflow"
export PROD_IONOS_BOR_FILES_CONTAINER_NAME="bor-files"
export PROD_IONOS_BOR_MESSAGE_CONTAINER_NAME="bor-message"




Recommended by you: 
env file consolidation

Recommended approach (no git hassles)
Create a secrets/config directory outside any git repo:
mkdir -p /var/www/vhosts/robmenning.com/bor/secrets
chmod 700 /var/www/vhosts/robmenning.com/bor/secrets
Store envs there, e.g.:
/var/www/vhosts/robmenning.com/bor/secrets/bor-app.prod.env
/var/www/vhosts/robmenning.com/bor/secrets/bor-app.prod.local.env
/var/www/vhosts/robmenning.com/bor/secrets/bor-af.prod.env
Update run scripts to use --env-file (no -e sprawl, no .env in repo):
For bor-app:
docker run ... --env-file /var/www/vhosts/robmenning.com/bor/secrets/bor-app.prod.env --env-file /var/www/vhosts/robmenning.com/bor/secrets/bor-app.prod.local.env ...
For bor-af:
docker run ... --env-file /var/www/vhosts/robmenning.com/bor/secrets/bor-af.prod.env ...
Deployment flow:
cd /var/www/vhosts/robmenning.com/bor/bor-app
git fetch origin && git reset --hard origin/notification && git clean -fd
scp updated envs to /var/www/vhosts/robmenning.com/bor/secrets (only when envs change)
restart containers with scripts
If you must keep env files inside the repo tree
Always copy after git pull:
git fetch && git reset --hard origin/notification && git clean -fd
scp .env* into the repo dir
restart
If you get blocked by local changes (from prior manual edits), force-clean:
git fetch origin
git reset --hard origin/notification
git clean -fd
As a temporary safety net (not recommended long-term on prod):
git stash push --include-untracked --message "pre-deploy-$(date +%F-%H%M)"
git pull --rebase
Optionally: git stash drop (avoid keeping stashes on prod)
Optional quality-of-life
Use a small loader in docker-run-prod.sh if you prefer exporting envs:
set -a; . /var/www/vhosts/robmenning.com/bor/secrets/bor-app.prod.env; [ -f /var/www/vhosts/robmenning.com/bor/secrets/bor-app.prod.local.env ] && . /var/www/vhosts/robmenning.com/bor/secrets/bor-app.prod.local.env; set +a
then docker run ... -e VAR="$VAR" ... (I still recommend --env-file)
Why this works best
Secrets never touch the git working tree, so git pull is always clean and idempotent.
You centralize secrets per service, can rotate independently, and remove the need for stash hacks.
Summary
Best practice: keep envs in /var/www/vhosts/robmenning.com/bor/secrets and reference them with --env-file; pull code first, then scp only if secrets changed; avoid git stash on prod.

... I suggest separate dir by container ...

Yes—do that. It’s the cleanest layout.
Suggested structure
/var/www/vhosts/robmenning.com/bor/secrets/
common/
prod.env (shared values like BOR_NETWORK)
bor-db/
prod.env
bor-api/
prod.env
prod.local.env
bor-app/
prod.env
prod.local.env
bor-af/
prod.env
Permissions
chown root:root /var/www/vhosts/robmenning.com/bor/secrets -R
chmod 700 /var/www/vhosts/robmenning.com/bor/secrets
chmod 600 on each .env (or 640 and run docker as root or a group that can read)
Update run scripts (example)
bor-app:
docker run ... \
--env-file /var/www/vhosts/robmenning.com/bor/secrets/common/prod.env \
--env-file /var/www/vhosts/robmenning.com/bor/secrets/bor-app/prod.env \
--env-file /var/www/vhosts/robmenning.com/bor/secrets/bor-app/prod.local.env \
...
bor-af:
docker run ... \
--env-file /var/www/vhosts/robmenning.com/bor/secrets/bor-af/prod.env \
...
Ops flow
git pull (code only)
scp/rsync envs to their per‑service secret folders only when they change
restart the containers
Tips
Keep “common” file minimal; override in service files later in the list.
Ensure newline at EOF; no quotes unless needed; no trailing spaces.
Optional: add a small check in scripts: [ -f path ] || echo "Missing env file" && exit 1.
This keeps secrets out of the repo, avoids git stash, and makes deployments idempotent.

